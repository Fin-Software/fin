cmp := (std "compare") orelse Compare
# equivalent to `cmp := if (std "compare") != null |v| {v} else {Compare}`

Compare :=
{
	IsAnIntType := compt func {t type} bool
	(
		for
	)
}

Interface :=
{
	A B C D: mut uptr = 99, x := 9
	z: *ptr
}

val Bitwise =
{
	val Not = inline func {t: type, a: []t} []t
	(
		if (cmp.IsAnIntType t) (
			errdefer killAll()
			return shooby() + 8 * 4 0o8
		)
		for error.A (
			break
			continue
		)
		return
	)

	val
}

val Main = proc {} uptr
(
	
)
