
// Generated from WhixyLexer.g4 by ANTLR 4.13.2

#include "WhixyLexer.h"

using namespace antlr4;

using namespace Whixy;

using namespace antlr4;

namespace {

struct WhixyLexerStaticData final {
    WhixyLexerStaticData(
	std::vector<std::string> ruleNames, std::vector<std::string> channelNames,
	std::vector<std::string> modeNames, std::vector<std::string> literalNames,
	std::vector<std::string> symbolicNames
    )
	: ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
	  modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
	  symbolicNames(std::move(symbolicNames)),
	  vocabulary(this->literalNames, this->symbolicNames) {}

    WhixyLexerStaticData(const WhixyLexerStaticData &) = delete;
    WhixyLexerStaticData(WhixyLexerStaticData &&) = delete;
    WhixyLexerStaticData &operator=(const WhixyLexerStaticData &) = delete;
    WhixyLexerStaticData &operator=(WhixyLexerStaticData &&) = delete;

    std::vector<antlr4::dfa::DFA> decisionToDFA;
    antlr4::atn::PredictionContextCache sharedContextCache;
    const std::vector<std::string> ruleNames;
    const std::vector<std::string> channelNames;
    const std::vector<std::string> modeNames;
    const std::vector<std::string> literalNames;
    const std::vector<std::string> symbolicNames;
    const antlr4::dfa::Vocabulary vocabulary;
    antlr4::atn::SerializedATNView serializedATN;
    std::unique_ptr<antlr4::atn::ATN> atn;
};

::antlr4::internal::OnceFlag whixylexerLexerOnceFlag;
#if ANTLR4_USE_THREAD_LOCAL_CACHE
static thread_local
#endif
    std::unique_ptr<WhixyLexerStaticData>
	whixylexerLexerStaticData = nullptr;

void whixylexerLexerInitialize() {
#if ANTLR4_USE_THREAD_LOCAL_CACHE
    if (whixylexerLexerStaticData != nullptr) {
	return;
    }
#else
    assert(whixylexerLexerStaticData == nullptr);
#endif
    auto staticData = std::make_unique<WhixyLexerStaticData>(
	std::vector<std::string>{
	    "COMMENT",	"STRING",   "DEFER",  "ELSE",	 "ENUM",    "ERRDEFER",	   "FOR",
	    "FUNC",	"IF",	    "IMPORT", "IS",	 "PROC",    "STD",	   "TEST",
	    "UNION",	"VAL",	    "WHILE",  "ALIGN",	 "BREAK",   "CATCH",	   "COMPT",
	    "CONTINUE", "INLINE",   "MUT",    "ORELSE",	 "RETURN",  "THREADLOCAL", "TRY",
	    "UNROLL",	"VOLATILE", "ID",     "INTEGER", "BASE10",  "BASE16",	   "BASE8",
	    "BASE32",	"BASE64",   "BASE85", "BASE91",	 "EXP_SEP", "STMT_SEP",	   "OBRACE",
	    "CBRACE",	"OPAREN",   "CPAREN", "COLON",	 "EQ",	    "NL",	   "WS"
	},
	std::vector<std::string>{"DEFAULT_TOKEN_CHANNEL", "HIDDEN"},
	std::vector<std::string>{"DEFAULT_MODE"},
	std::vector<std::string>{
	    "",		  "",	      "",	  "'defer'",	   "'else'",	 "'enum'",
	    "'errdefer'", "'for'",    "'func'",	  "'if'",	   "'import'",	 "'is'",
	    "'proc'",	  "'std'",    "'test'",	  "'union'",	   "'val'",	 "'while'",
	    "'align'",	  "'break'",  "'catch'",  "'compt'",	   "'continue'", "'inline'",
	    "'mut'",	  "'orelse'", "'return'", "'threadlocal'", "'try'",	 "'unroll'",
	    "'volatile'", "",	      "",	  "','",	   "';'"
	},
	std::vector<std::string>{"",	     "COMMENT",	 "STRING",	"DEFER",   "ELSE",
				 "ENUM",     "ERRDEFER", "FOR",		"FUNC",	   "IF",
				 "IMPORT",   "IS",	 "PROC",	"STD",	   "TEST",
				 "UNION",    "VAL",	 "WHILE",	"ALIGN",   "BREAK",
				 "CATCH",    "COMPT",	 "CONTINUE",	"INLINE",  "MUT",
				 "ORELSE",   "RETURN",	 "THREADLOCAL", "TRY",	   "UNROLL",
				 "VOLATILE", "ID",	 "INTEGER",	"EXP_SEP", "STMT_SEP",
				 "OBRACE",   "CBRACE",	 "OPAREN",	"CPAREN",  "COLON",
				 "EQ",	     "NL",	 "WS"}
    );
    static const int32_t serializedATNSegment[] = {
	4,   0,	  42,  422, 6,	 -1,  2,   0,	7,   0,	  2,   1,   7,	 1,   2,   2,	7,   2,
	2,   3,	  7,   3,   2,	 4,   7,   4,	2,   5,	  7,   5,   2,	 6,   7,   6,	2,   7,
	7,   7,	  2,   8,   7,	 8,   2,   9,	7,   9,	  2,   10,  7,	 10,  2,   11,	7,   11,
	2,   12,  7,   12,  2,	 13,  7,   13,	2,   14,  7,   14,  2,	 15,  7,   15,	2,   16,
	7,   16,  2,   17,  7,	 17,  2,   18,	7,   18,  2,   19,  7,	 19,  2,   20,	7,   20,
	2,   21,  7,   21,  2,	 22,  7,   22,	2,   23,  7,   23,  2,	 24,  7,   24,	2,   25,
	7,   25,  2,   26,  7,	 26,  2,   27,	7,   27,  2,   28,  7,	 28,  2,   29,	7,   29,
	2,   30,  7,   30,  2,	 31,  7,   31,	2,   32,  7,   32,  2,	 33,  7,   33,	2,   34,
	7,   34,  2,   35,  7,	 35,  2,   36,	7,   36,  2,   37,  7,	 37,  2,   38,	7,   38,
	2,   39,  7,   39,  2,	 40,  7,   40,	2,   41,  7,   41,  2,	 42,  7,   42,	2,   43,
	7,   43,  2,   44,  7,	 44,  2,   45,	7,   45,  2,   46,  7,	 46,  2,   47,	7,   47,
	2,   48,  7,   48,  1,	 0,   1,   0,	5,   0,	  102, 8,   0,	 10,  0,   12,	0,   105,
	9,   0,	  1,   0,   1,	 0,   1,   1,	1,   1,	  5,   1,   111, 8,   1,   10,	1,   12,
	1,   114, 9,   1,   1,	 1,   1,   1,	1,   1,	  5,   1,   119, 8,   1,   10,	1,   12,
	1,   122, 9,   1,   1,	 1,   3,   1,	125, 8,	  1,   1,   2,	 1,   2,   1,	2,   1,
	2,   1,	  2,   1,   2,	 1,   3,   1,	3,   1,	  3,   1,   3,	 1,   3,   1,	4,   1,
	4,   1,	  4,   1,   4,	 1,   4,   1,	5,   1,	  5,   1,   5,	 1,   5,   1,	5,   1,
	5,   1,	  5,   1,   5,	 1,   5,   1,	6,   1,	  6,   1,   6,	 1,   6,   1,	7,   1,
	7,   1,	  7,   1,   7,	 1,   7,   1,	8,   1,	  8,   1,   8,	 1,   9,   1,	9,   1,
	9,   1,	  9,   1,   9,	 1,   9,   1,	9,   1,	  10,  1,   10,	 1,   10,  1,	11,  1,
	11,  1,	  11,  1,   11,	 1,   11,  1,	12,  1,	  12,  1,   12,	 1,   12,  1,	13,  1,
	13,  1,	  13,  1,   13,	 1,   13,  1,	14,  1,	  14,  1,   14,	 1,   14,  1,	14,  1,
	14,  1,	  15,  1,   15,	 1,   15,  1,	15,  1,	  16,  1,   16,	 1,   16,  1,	16,  1,
	16,  1,	  16,  1,   17,	 1,   17,  1,	17,  1,	  17,  1,   17,	 1,   17,  1,	18,  1,
	18,  1,	  18,  1,   18,	 1,   18,  1,	18,  1,	  19,  1,   19,	 1,   19,  1,	19,  1,
	19,  1,	  19,  1,   20,	 1,   20,  1,	20,  1,	  20,  1,   20,	 1,   20,  1,	21,  1,
	21,  1,	  21,  1,   21,	 1,   21,  1,	21,  1,	  21,  1,   21,	 1,   21,  1,	22,  1,
	22,  1,	  22,  1,   22,	 1,   22,  1,	22,  1,	  22,  1,   23,	 1,   23,  1,	23,  1,
	23,  1,	  24,  1,   24,	 1,   24,  1,	24,  1,	  24,  1,   24,	 1,   24,  1,	25,  1,
	25,  1,	  25,  1,   25,	 1,   25,  1,	25,  1,	  25,  1,   26,	 1,   26,  1,	26,  1,
	26,  1,	  26,  1,   26,	 1,   26,  1,	26,  1,	  26,  1,   26,	 1,   26,  1,	26,  1,
	27,  1,	  27,  1,   27,	 1,   27,  1,	28,  1,	  28,  1,   28,	 1,   28,  1,	28,  1,
	28,  1,	  28,  1,   29,	 1,   29,  1,	29,  1,	  29,  1,   29,	 1,   29,  1,	29,  1,
	29,  1,	  29,  1,   30,	 1,   30,  1,	30,  5,	  30,  297, 8,	 30,  10,  30,	12,  30,
	300, 9,	  30,  3,   30,	 302, 8,   30,	1,   31,  1,   31,  1,	 31,  1,   31,	1,   31,
	1,   31,  1,   31,  3,	 31,  311, 8,	31,  1,	  32,  1,   32,	 1,   32,  3,	32,  316,
	8,   32,  1,   32,  4,	 32,  319, 8,	32,  11,  32,  12,  32,	 320, 1,   33,	1,   33,
	1,   33,  1,   33,  1,	 33,  3,   33,	328, 8,	  33,  1,   33,	 4,   33,  331, 8,   33,
	11,  33,  12,  33,  332, 1,   34,  1,	34,  1,	  34,  1,   34,	 1,   34,  3,	34,  340,
	8,   34,  1,   34,  4,	 34,  343, 8,	34,  11,  34,  12,  34,	 344, 1,   35,	1,   35,
	1,   35,  1,   35,  1,	 35,  4,   35,	352, 8,	  35,  11,  35,	 12,  35,  353, 1,   36,
	1,   36,  1,   36,  1,	 36,  1,   36,	4,   36,  361, 8,   36,	 11,  36,  12,	36,  362,
	1,   37,  1,   37,  1,	 37,  1,   37,	1,   37,  4,   37,  370, 8,   37,  11,	37,  12,
	37,  371, 1,   38,  1,	 38,  1,   38,	1,   38,  1,   38,  4,	 38,  379, 8,	38,  11,
	38,  12,  38,  380, 1,	 39,  1,   39,	1,   40,  1,   40,  1,	 41,  1,   41,	3,   41,
	389, 8,	  41,  1,   42,	 1,   42,  3,	42,  393, 8,   42,  1,	 43,  1,   43,	3,   43,
	397, 8,	  43,  1,   44,	 1,   44,  3,	44,  401, 8,   44,  1,	 45,  1,   45,	3,   45,
	405, 8,	  45,  1,   46,	 1,   46,  3,	46,  409, 8,   46,  1,	 47,  4,   47,	412, 8,
	47,  11,  47,  12,  47,	 413, 1,   48,	4,   48,  417, 8,   48,	 11,  48,  12,	48,  418,
	1,   48,  1,   48,  2,	 112, 120, 0,	49,  1,	  1,   3,   2,	 5,   3,   7,	4,   9,
	5,   11,  6,   13,  7,	 15,  8,   17,	9,   19,  10,  21,  11,	 23,  12,  25,	13,  27,
	14,  29,  15,  31,  16,	 33,  17,  35,	18,  37,  19,  39,  20,	 41,  21,  43,	22,  45,
	23,  47,  24,  49,  25,	 51,  26,  53,	27,  55,  28,  57,  29,	 59,  30,  61,	31,  63,
	32,  65,  0,   67,  0,	 69,  0,   71,	0,   73,  0,   75,  0,	 77,  0,   79,	33,  81,
	34,  83,  35,  85,  36,	 87,  37,  89,	38,  91,  39,  93,  40,	 95,  41,  97,	42,  1,
	0,   12,  2,   0,   10,	 10,  13,  13,	2,   0,	  65,  90,  97,	 122, 4,   0,	48,  57,
	65,  90,  95,  95,  97,	 122, 1,   0,	48,  57,  2,   0,   88,	 88,  120, 120, 3,   0,
	48,  57,  65,  70,  97,	 102, 1,   0,	48,  55,  2,   0,   50,	 55,  65,  90,	4,   0,
	43,  43,  47,  57,  65,	 90,  97,  122, 1,   0,	  33,  117, 1,	 0,   33,  126, 2,   0,
	9,   9,	  32,  32,  444, 0,   1,   1,	0,   0,	  0,   0,   3,	 1,   0,   0,	0,   0,
	5,   1,	  0,   0,   0,	 0,   7,   1,	0,   0,	  0,   0,   9,	 1,   0,   0,	0,   0,
	11,  1,	  0,   0,   0,	 0,   13,  1,	0,   0,	  0,   0,   15,	 1,   0,   0,	0,   0,
	17,  1,	  0,   0,   0,	 0,   19,  1,	0,   0,	  0,   0,   21,	 1,   0,   0,	0,   0,
	23,  1,	  0,   0,   0,	 0,   25,  1,	0,   0,	  0,   0,   27,	 1,   0,   0,	0,   0,
	29,  1,	  0,   0,   0,	 0,   31,  1,	0,   0,	  0,   0,   33,	 1,   0,   0,	0,   0,
	35,  1,	  0,   0,   0,	 0,   37,  1,	0,   0,	  0,   0,   39,	 1,   0,   0,	0,   0,
	41,  1,	  0,   0,   0,	 0,   43,  1,	0,   0,	  0,   0,   45,	 1,   0,   0,	0,   0,
	47,  1,	  0,   0,   0,	 0,   49,  1,	0,   0,	  0,   0,   51,	 1,   0,   0,	0,   0,
	53,  1,	  0,   0,   0,	 0,   55,  1,	0,   0,	  0,   0,   57,	 1,   0,   0,	0,   0,
	59,  1,	  0,   0,   0,	 0,   61,  1,	0,   0,	  0,   0,   63,	 1,   0,   0,	0,   0,
	79,  1,	  0,   0,   0,	 0,   81,  1,	0,   0,	  0,   0,   83,	 1,   0,   0,	0,   0,
	85,  1,	  0,   0,   0,	 0,   87,  1,	0,   0,	  0,   0,   89,	 1,   0,   0,	0,   0,
	91,  1,	  0,   0,   0,	 0,   93,  1,	0,   0,	  0,   0,   95,	 1,   0,   0,	0,   0,
	97,  1,	  0,   0,   0,	 1,   99,  1,	0,   0,	  0,   3,   124, 1,   0,   0,	0,   5,
	126, 1,	  0,   0,   0,	 7,   132, 1,	0,   0,	  0,   9,   137, 1,   0,   0,	0,   11,
	142, 1,	  0,   0,   0,	 13,  151, 1,	0,   0,	  0,   15,  155, 1,   0,   0,	0,   17,
	160, 1,	  0,   0,   0,	 19,  163, 1,	0,   0,	  0,   21,  170, 1,   0,   0,	0,   23,
	173, 1,	  0,   0,   0,	 25,  178, 1,	0,   0,	  0,   27,  182, 1,   0,   0,	0,   29,
	187, 1,	  0,   0,   0,	 31,  193, 1,	0,   0,	  0,   33,  197, 1,   0,   0,	0,   35,
	203, 1,	  0,   0,   0,	 37,  209, 1,	0,   0,	  0,   39,  215, 1,   0,   0,	0,   41,
	221, 1,	  0,   0,   0,	 43,  227, 1,	0,   0,	  0,   45,  236, 1,   0,   0,	0,   47,
	243, 1,	  0,   0,   0,	 49,  247, 1,	0,   0,	  0,   51,  254, 1,   0,   0,	0,   53,
	261, 1,	  0,   0,   0,	 55,  273, 1,	0,   0,	  0,   57,  277, 1,   0,   0,	0,   59,
	284, 1,	  0,   0,   0,	 61,  301, 1,	0,   0,	  0,   63,  310, 1,   0,   0,	0,   65,
	315, 1,	  0,   0,   0,	 67,  327, 1,	0,   0,	  0,   69,  339, 1,   0,   0,	0,   71,
	346, 1,	  0,   0,   0,	 73,  355, 1,	0,   0,	  0,   75,  364, 1,   0,   0,	0,   77,
	373, 1,	  0,   0,   0,	 79,  382, 1,	0,   0,	  0,   81,  384, 1,   0,   0,	0,   83,
	386, 1,	  0,   0,   0,	 85,  390, 1,	0,   0,	  0,   87,  394, 1,   0,   0,	0,   89,
	398, 1,	  0,   0,   0,	 91,  402, 1,	0,   0,	  0,   93,  406, 1,   0,   0,	0,   95,
	411, 1,	  0,   0,   0,	 97,  416, 1,	0,   0,	  0,   99,  103, 5,   35,  0,	0,   100,
	102, 8,	  0,   0,   0,	 101, 100, 1,	0,   0,	  0,   102, 105, 1,   0,   0,	0,   103,
	101, 1,	  0,   0,   0,	 103, 104, 1,	0,   0,	  0,   104, 106, 1,   0,   0,	0,   105,
	103, 1,	  0,   0,   0,	 106, 107, 6,	0,   0,	  0,   107, 2,	 1,   0,   0,	0,   108,
	112, 5,	  34,  0,   0,	 109, 111, 9,	0,   0,	  0,   110, 109, 1,   0,   0,	0,   111,
	114, 1,	  0,   0,   0,	 112, 113, 1,	0,   0,	  0,   112, 110, 1,   0,   0,	0,   113,
	115, 1,	  0,   0,   0,	 114, 112, 1,	0,   0,	  0,   115, 125, 5,   34,  0,	0,   116,
	120, 5,	  96,  0,   0,	 117, 119, 9,	0,   0,	  0,   118, 117, 1,   0,   0,	0,   119,
	122, 1,	  0,   0,   0,	 120, 121, 1,	0,   0,	  0,   120, 118, 1,   0,   0,	0,   121,
	123, 1,	  0,   0,   0,	 122, 120, 1,	0,   0,	  0,   123, 125, 5,   96,  0,	0,   124,
	108, 1,	  0,   0,   0,	 124, 116, 1,	0,   0,	  0,   125, 4,	 1,   0,   0,	0,   126,
	127, 5,	  100, 0,   0,	 127, 128, 5,	101, 0,	  0,   128, 129, 5,   102, 0,	0,   129,
	130, 5,	  101, 0,   0,	 130, 131, 5,	114, 0,	  0,   131, 6,	 1,   0,   0,	0,   132,
	133, 5,	  101, 0,   0,	 133, 134, 5,	108, 0,	  0,   134, 135, 5,   115, 0,	0,   135,
	136, 5,	  101, 0,   0,	 136, 8,   1,	0,   0,	  0,   137, 138, 5,   101, 0,	0,   138,
	139, 5,	  110, 0,   0,	 139, 140, 5,	117, 0,	  0,   140, 141, 5,   109, 0,	0,   141,
	10,  1,	  0,   0,   0,	 142, 143, 5,	101, 0,	  0,   143, 144, 5,   114, 0,	0,   144,
	145, 5,	  114, 0,   0,	 145, 146, 5,	100, 0,	  0,   146, 147, 5,   101, 0,	0,   147,
	148, 5,	  102, 0,   0,	 148, 149, 5,	101, 0,	  0,   149, 150, 5,   114, 0,	0,   150,
	12,  1,	  0,   0,   0,	 151, 152, 5,	102, 0,	  0,   152, 153, 5,   111, 0,	0,   153,
	154, 5,	  114, 0,   0,	 154, 14,  1,	0,   0,	  0,   155, 156, 5,   102, 0,	0,   156,
	157, 5,	  117, 0,   0,	 157, 158, 5,	110, 0,	  0,   158, 159, 5,   99,  0,	0,   159,
	16,  1,	  0,   0,   0,	 160, 161, 5,	105, 0,	  0,   161, 162, 5,   102, 0,	0,   162,
	18,  1,	  0,   0,   0,	 163, 164, 5,	105, 0,	  0,   164, 165, 5,   109, 0,	0,   165,
	166, 5,	  112, 0,   0,	 166, 167, 5,	111, 0,	  0,   167, 168, 5,   114, 0,	0,   168,
	169, 5,	  116, 0,   0,	 169, 20,  1,	0,   0,	  0,   170, 171, 5,   105, 0,	0,   171,
	172, 5,	  115, 0,   0,	 172, 22,  1,	0,   0,	  0,   173, 174, 5,   112, 0,	0,   174,
	175, 5,	  114, 0,   0,	 175, 176, 5,	111, 0,	  0,   176, 177, 5,   99,  0,	0,   177,
	24,  1,	  0,   0,   0,	 178, 179, 5,	115, 0,	  0,   179, 180, 5,   116, 0,	0,   180,
	181, 5,	  100, 0,   0,	 181, 26,  1,	0,   0,	  0,   182, 183, 5,   116, 0,	0,   183,
	184, 5,	  101, 0,   0,	 184, 185, 5,	115, 0,	  0,   185, 186, 5,   116, 0,	0,   186,
	28,  1,	  0,   0,   0,	 187, 188, 5,	117, 0,	  0,   188, 189, 5,   110, 0,	0,   189,
	190, 5,	  105, 0,   0,	 190, 191, 5,	111, 0,	  0,   191, 192, 5,   110, 0,	0,   192,
	30,  1,	  0,   0,   0,	 193, 194, 5,	118, 0,	  0,   194, 195, 5,   97,  0,	0,   195,
	196, 5,	  108, 0,   0,	 196, 32,  1,	0,   0,	  0,   197, 198, 5,   119, 0,	0,   198,
	199, 5,	  104, 0,   0,	 199, 200, 5,	105, 0,	  0,   200, 201, 5,   108, 0,	0,   201,
	202, 5,	  101, 0,   0,	 202, 34,  1,	0,   0,	  0,   203, 204, 5,   97,  0,	0,   204,
	205, 5,	  108, 0,   0,	 205, 206, 5,	105, 0,	  0,   206, 207, 5,   103, 0,	0,   207,
	208, 5,	  110, 0,   0,	 208, 36,  1,	0,   0,	  0,   209, 210, 5,   98,  0,	0,   210,
	211, 5,	  114, 0,   0,	 211, 212, 5,	101, 0,	  0,   212, 213, 5,   97,  0,	0,   213,
	214, 5,	  107, 0,   0,	 214, 38,  1,	0,   0,	  0,   215, 216, 5,   99,  0,	0,   216,
	217, 5,	  97,  0,   0,	 217, 218, 5,	116, 0,	  0,   218, 219, 5,   99,  0,	0,   219,
	220, 5,	  104, 0,   0,	 220, 40,  1,	0,   0,	  0,   221, 222, 5,   99,  0,	0,   222,
	223, 5,	  111, 0,   0,	 223, 224, 5,	109, 0,	  0,   224, 225, 5,   112, 0,	0,   225,
	226, 5,	  116, 0,   0,	 226, 42,  1,	0,   0,	  0,   227, 228, 5,   99,  0,	0,   228,
	229, 5,	  111, 0,   0,	 229, 230, 5,	110, 0,	  0,   230, 231, 5,   116, 0,	0,   231,
	232, 5,	  105, 0,   0,	 232, 233, 5,	110, 0,	  0,   233, 234, 5,   117, 0,	0,   234,
	235, 5,	  101, 0,   0,	 235, 44,  1,	0,   0,	  0,   236, 237, 5,   105, 0,	0,   237,
	238, 5,	  110, 0,   0,	 238, 239, 5,	108, 0,	  0,   239, 240, 5,   105, 0,	0,   240,
	241, 5,	  110, 0,   0,	 241, 242, 5,	101, 0,	  0,   242, 46,	 1,   0,   0,	0,   243,
	244, 5,	  109, 0,   0,	 244, 245, 5,	117, 0,	  0,   245, 246, 5,   116, 0,	0,   246,
	48,  1,	  0,   0,   0,	 247, 248, 5,	111, 0,	  0,   248, 249, 5,   114, 0,	0,   249,
	250, 5,	  101, 0,   0,	 250, 251, 5,	108, 0,	  0,   251, 252, 5,   115, 0,	0,   252,
	253, 5,	  101, 0,   0,	 253, 50,  1,	0,   0,	  0,   254, 255, 5,   114, 0,	0,   255,
	256, 5,	  101, 0,   0,	 256, 257, 5,	116, 0,	  0,   257, 258, 5,   117, 0,	0,   258,
	259, 5,	  114, 0,   0,	 259, 260, 5,	110, 0,	  0,   260, 52,	 1,   0,   0,	0,   261,
	262, 5,	  116, 0,   0,	 262, 263, 5,	104, 0,	  0,   263, 264, 5,   114, 0,	0,   264,
	265, 5,	  101, 0,   0,	 265, 266, 5,	97,  0,	  0,   266, 267, 5,   100, 0,	0,   267,
	268, 5,	  108, 0,   0,	 268, 269, 5,	111, 0,	  0,   269, 270, 5,   99,  0,	0,   270,
	271, 5,	  97,  0,   0,	 271, 272, 5,	108, 0,	  0,   272, 54,	 1,   0,   0,	0,   273,
	274, 5,	  116, 0,   0,	 274, 275, 5,	114, 0,	  0,   275, 276, 5,   121, 0,	0,   276,
	56,  1,	  0,   0,   0,	 277, 278, 5,	117, 0,	  0,   278, 279, 5,   110, 0,	0,   279,
	280, 5,	  114, 0,   0,	 280, 281, 5,	111, 0,	  0,   281, 282, 5,   108, 0,	0,   282,
	283, 5,	  108, 0,   0,	 283, 58,  1,	0,   0,	  0,   284, 285, 5,   118, 0,	0,   285,
	286, 5,	  111, 0,   0,	 286, 287, 5,	108, 0,	  0,   287, 288, 5,   97,  0,	0,   288,
	289, 5,	  116, 0,   0,	 289, 290, 5,	105, 0,	  0,   290, 291, 5,   108, 0,	0,   291,
	292, 5,	  101, 0,   0,	 292, 60,  1,	0,   0,	  0,   293, 302, 5,   95,  0,	0,   294,
	298, 7,	  1,   0,   0,	 295, 297, 7,	2,   0,	  0,   296, 295, 1,   0,   0,	0,   297,
	300, 1,	  0,   0,   0,	 298, 296, 1,	0,   0,	  0,   298, 299, 1,   0,   0,	0,   299,
	302, 1,	  0,   0,   0,	 300, 298, 1,	0,   0,	  0,   301, 293, 1,   0,   0,	0,   301,
	294, 1,	  0,   0,   0,	 302, 62,  1,	0,   0,	  0,   303, 311, 3,   65,  32,	0,   304,
	311, 3,	  67,  33,  0,	 305, 311, 3,	69,  34,  0,   306, 311, 3,   73,  36,	0,   307,
	311, 3,	  71,  35,  0,	 308, 311, 3,	75,  37,  0,   309, 311, 3,   77,  38,	0,   310,
	303, 1,	  0,   0,   0,	 310, 304, 1,	0,   0,	  0,   310, 305, 1,   0,   0,	0,   310,
	306, 1,	  0,   0,   0,	 310, 307, 1,	0,   0,	  0,   310, 308, 1,   0,   0,	0,   310,
	309, 1,	  0,   0,   0,	 311, 64,  1,	0,   0,	  0,   312, 313, 5,   49,  0,	0,   313,
	314, 5,	  48,  0,   0,	 314, 316, 5,	95,  0,	  0,   315, 312, 1,   0,   0,	0,   315,
	316, 1,	  0,   0,   0,	 316, 318, 1,	0,   0,	  0,   317, 319, 7,   3,   0,	0,   318,
	317, 1,	  0,   0,   0,	 319, 320, 1,	0,   0,	  0,   320, 318, 1,   0,   0,	0,   320,
	321, 1,	  0,   0,   0,	 321, 66,  1,	0,   0,	  0,   322, 323, 5,   48,  0,	0,   323,
	328, 7,	  4,   0,   0,	 324, 325, 5,	49,  0,	  0,   325, 326, 5,   54,  0,	0,   326,
	328, 5,	  95,  0,   0,	 327, 322, 1,	0,   0,	  0,   327, 324, 1,   0,   0,	0,   328,
	330, 1,	  0,   0,   0,	 329, 331, 7,	5,   0,	  0,   330, 329, 1,   0,   0,	0,   331,
	332, 1,	  0,   0,   0,	 332, 330, 1,	0,   0,	  0,   332, 333, 1,   0,   0,	0,   333,
	68,  1,	  0,   0,   0,	 334, 335, 5,	48,  0,	  0,   335, 340, 7,   4,   0,	0,   336,
	337, 5,	  48,  0,   0,	 337, 338, 5,	56,  0,	  0,   338, 340, 5,   95,  0,	0,   339,
	334, 1,	  0,   0,   0,	 339, 336, 1,	0,   0,	  0,   340, 342, 1,   0,   0,	0,   341,
	343, 7,	  6,   0,   0,	 342, 341, 1,	0,   0,	  0,   343, 344, 1,   0,   0,	0,   344,
	342, 1,	  0,   0,   0,	 344, 345, 1,	0,   0,	  0,   345, 70,	 1,   0,   0,	0,   346,
	347, 5,	  51,  0,   0,	 347, 348, 5,	50,  0,	  0,   348, 349, 5,   95,  0,	0,   349,
	351, 1,	  0,   0,   0,	 350, 352, 7,	7,   0,	  0,   351, 350, 1,   0,   0,	0,   352,
	353, 1,	  0,   0,   0,	 353, 351, 1,	0,   0,	  0,   353, 354, 1,   0,   0,	0,   354,
	72,  1,	  0,   0,   0,	 355, 356, 5,	54,  0,	  0,   356, 357, 5,   52,  0,	0,   357,
	358, 5,	  95,  0,   0,	 358, 360, 1,	0,   0,	  0,   359, 361, 7,   8,   0,	0,   360,
	359, 1,	  0,   0,   0,	 361, 362, 1,	0,   0,	  0,   362, 360, 1,   0,   0,	0,   362,
	363, 1,	  0,   0,   0,	 363, 74,  1,	0,   0,	  0,   364, 365, 5,   56,  0,	0,   365,
	366, 5,	  53,  0,   0,	 366, 367, 5,	95,  0,	  0,   367, 369, 1,   0,   0,	0,   368,
	370, 7,	  9,   0,   0,	 369, 368, 1,	0,   0,	  0,   370, 371, 1,   0,   0,	0,   371,
	369, 1,	  0,   0,   0,	 371, 372, 1,	0,   0,	  0,   372, 76,	 1,   0,   0,	0,   373,
	374, 5,	  57,  0,   0,	 374, 375, 5,	49,  0,	  0,   375, 376, 5,   95,  0,	0,   376,
	378, 1,	  0,   0,   0,	 377, 379, 7,	10,  0,	  0,   378, 377, 1,   0,   0,	0,   379,
	380, 1,	  0,   0,   0,	 380, 378, 1,	0,   0,	  0,   380, 381, 1,   0,   0,	0,   381,
	78,  1,	  0,   0,   0,	 382, 383, 5,	44,  0,	  0,   383, 80,	 1,   0,   0,	0,   384,
	385, 5,	  59,  0,   0,	 385, 82,  1,	0,   0,	  0,   386, 388, 5,   123, 0,	0,   387,
	389, 3,	  95,  47,  0,	 388, 387, 1,	0,   0,	  0,   388, 389, 1,   0,   0,	0,   389,
	84,  1,	  0,   0,   0,	 390, 392, 5,	125, 0,	  0,   391, 393, 3,   95,  47,	0,   392,
	391, 1,	  0,   0,   0,	 392, 393, 1,	0,   0,	  0,   393, 86,	 1,   0,   0,	0,   394,
	396, 5,	  40,  0,   0,	 395, 397, 3,	95,  47,  0,   396, 395, 1,   0,   0,	0,   396,
	397, 1,	  0,   0,   0,	 397, 88,  1,	0,   0,	  0,   398, 400, 5,   41,  0,	0,   399,
	401, 3,	  95,  47,  0,	 400, 399, 1,	0,   0,	  0,   400, 401, 1,   0,   0,	0,   401,
	90,  1,	  0,   0,   0,	 402, 404, 5,	58,  0,	  0,   403, 405, 3,   95,  47,	0,   404,
	403, 1,	  0,   0,   0,	 404, 405, 1,	0,   0,	  0,   405, 92,	 1,   0,   0,	0,   406,
	408, 5,	  61,  0,   0,	 407, 409, 3,	95,  47,  0,   408, 407, 1,   0,   0,	0,   408,
	409, 1,	  0,   0,   0,	 409, 94,  1,	0,   0,	  0,   410, 412, 7,   0,   0,	0,   411,
	410, 1,	  0,   0,   0,	 412, 413, 1,	0,   0,	  0,   413, 411, 1,   0,   0,	0,   413,
	414, 1,	  0,   0,   0,	 414, 96,  1,	0,   0,	  0,   415, 417, 7,   11,  0,	0,   416,
	415, 1,	  0,   0,   0,	 417, 418, 1,	0,   0,	  0,   418, 416, 1,   0,   0,	0,   418,
	419, 1,	  0,   0,   0,	 419, 420, 1,	0,   0,	  0,   420, 421, 6,   48,  0,	0,   421,
	98,  1,	  0,   0,   0,	 26,  0,   103, 112, 120, 124, 298, 301, 310, 315, 320, 327, 332,
	339, 344, 353, 362, 371, 380, 388, 392, 396, 400, 404, 408, 413, 418, 1,   6,	0,   0
    };
    staticData->serializedATN = antlr4::atn::SerializedATNView(
	serializedATNSegment, sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0])
    );

    antlr4::atn::ATNDeserializer deserializer;
    staticData->atn = deserializer.deserialize(staticData->serializedATN);

    const size_t count = staticData->atn->getNumberOfDecisions();
    staticData->decisionToDFA.reserve(count);
    for (size_t i = 0; i < count; i++) {
	staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
    }
    whixylexerLexerStaticData = std::move(staticData);
}

} // namespace

WhixyLexer::WhixyLexer(CharStream *input) : Lexer(input) {
    WhixyLexer::initialize();
    _interpreter = new atn::LexerATNSimulator(
	this, *whixylexerLexerStaticData->atn, whixylexerLexerStaticData->decisionToDFA,
	whixylexerLexerStaticData->sharedContextCache
    );
}

WhixyLexer::~WhixyLexer() { delete _interpreter; }

std::string WhixyLexer::getGrammarFileName() const { return "WhixyLexer.g4"; }

const std::vector<std::string> &WhixyLexer::getRuleNames() const {
    return whixylexerLexerStaticData->ruleNames;
}

const std::vector<std::string> &WhixyLexer::getChannelNames() const {
    return whixylexerLexerStaticData->channelNames;
}

const std::vector<std::string> &WhixyLexer::getModeNames() const {
    return whixylexerLexerStaticData->modeNames;
}

const dfa::Vocabulary &WhixyLexer::getVocabulary() const {
    return whixylexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView WhixyLexer::getSerializedATN() const {
    return whixylexerLexerStaticData->serializedATN;
}

const atn::ATN &WhixyLexer::getATN() const { return *whixylexerLexerStaticData->atn; }

void WhixyLexer::initialize() {
#if ANTLR4_USE_THREAD_LOCAL_CACHE
    whixylexerLexerInitialize();
#else
    ::antlr4::internal::call_once(whixylexerLexerOnceFlag, whixylexerLexerInitialize);
#endif
}
